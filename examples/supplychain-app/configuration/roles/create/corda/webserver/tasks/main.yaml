############################################################################################
- name: "Check or Wait for node pod to be up"
  include_role:
    name: "{{ playbook_dir }}/../../r3-corda/configuration/roles/check/node_component"
  vars:
    component_type: "Pod"
    component_name: "{{ node.name }}"
  loop: "{{ organization_data.services.peers }}"
  loop_control:
    loop_var: node
  when: component_type == 'node' and node.springboot is defined

# Create corda webserver value file for the peer nodes
- name: "Create webserver values file for peer organizations"
  include_role:
    name: helm_component
  vars:
    type: "webserver"
    name: "{{ node.name }}"
    charts_dir: "{{ organization_data.gitops.chart_source }}"
    image_tag: "{{ springboot_image_tag[network.version] }}"
  loop: "{{ organization_data.services.peers }}"
  loop_control:
    loop_var: node
  when: component_type == 'node' and node.springboot is defined

# Push the webserver deployment files to repository
- name: "Push the created deployment files to repository"
  include_role: 
    name: "{{ playbook_dir }}/../../../platforms/shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    GIT_REPO: "{{ component_gitops.git_push_url }}"
    GIT_USERNAME: "{{ component_gitops.username }}"
    GIT_EMAIL: "{{ component_gitops.email }}"
    GIT_PASSWORD: "{{ component_gitops.password }}"
    GIT_BRANCH: "{{ component_gitops.branch }}"
    GIT_RESET_PATH: "platforms/r3-corda/configuration"
    msg: "[ci skip] Pushing deployment files for corda webserver"
  when: component_type == 'node'