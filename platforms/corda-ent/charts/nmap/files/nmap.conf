address = "0.0.0.0:{{ .Values.service.port }}"
pollingInterval = 10000
checkRevocation = "{{ .Values.checkRevocation }}"
database {
    driverClassName = "{{ .Values.database.driverClassName }}"
    url = "{{ .Values.database.url }}"
    user = "{{ .Values.database.user }}"
    password = "{{ .Values.database.password }}"
    runMigration = "{{ .Values.database.runMigration }}"
}

enmListener = {
    port = {{ .Values.serviceInternal.port }}
    ssl = {
        keyStore = {
            location = "./DATA/key-stores/corda-ssl-network-map-keys.jks"
            password = password
        }
        trustStore = {
            location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
            password = password
        }
    }
}

identityManager = {
    host = {{ .Values.identityManager.host }}
    port = {{ .Values.identityManager.port }}
    ssl = {
        keyStore = {
            location = "./DATA/key-stores/corda-ssl-network-map-keys.jks"
            password = password
        }
        trustStore = {
            location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
            password = password
        }
    }
}

revocation = {
    host = {{ .Values.identityManager.host }}
    port = {{ .Values.revocation.port }}
    ssl = {
        keyStore = {
            location = "./DATA/key-stores/corda-ssl-network-map-keys.jks"
            password = password
        }
        trustStore = {
            location = "./DATA/trust-stores/corda-ssl-trust-store.jks"
            password = password
        }
    }
}

shell {
  sshdPort = {{ .Values.shell.sshdPort }}
  user = "{{ .Values.shell.user }}"
  password = "{{ .Values.shell.password }}"
}
